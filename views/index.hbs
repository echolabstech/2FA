<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>2FA Demo - login</title>
  <link rel="stylesheet" href="reset.css">
	<link href="https://unpkg.com/material-components-web@latest/dist/material-components-web.min.css" rel="stylesheet">
  <script src="https://unpkg.com/material-components-web@latest/dist/material-components-web.min.js"></script>
  <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
	<link rel="stylesheet" href="index.css">
</head>
	<body>
		<div id="root" class="root">
			<div class="scrimmed"></div>

			<div class="modal">
				<div class="modal__login mdc-elevation--z12">
					<form class="modal__login__form" id="first-factor">
						<div class="mdc-text-field
												mdc-text-field--outlined
												mdc-text-field--no-label">
						  <input class="mdc-text-field__input" type="text"
						  			 aria-label="Label" placeholder="username"
						  			 name="username" value="admin">
						  <span class="mdc-notched-outline">
						    <span class="mdc-notched-outline__leading"></span>
						    <span class="mdc-notched-outline__trailing"></span>
						  </span>
						</div>

						<div class="mdc-text-field
												mdc-text-field--outlined
												mdc-text-field--no-label">
						  <input class="mdc-text-field__input" type="password"
						  			 aria-label="Label" placeholder="password"
						  			 name="password" value="$trongp@ssw0rd">
						  <span class="mdc-notched-outline">
						    <span class="mdc-notched-outline__leading"></span>
						    <span class="mdc-notched-outline__trailing"></span>
						  </span>
						</div>

						<button class="mdc-button mdc-button--unelevated">
							<span class="mdc-button__ripple"></span>sign-in
						</button>
					</form>

					<button class="mdc-button">
						<span class="mdc-button__ripple"></span>sign-up
					</button>
				</div>

				<!-- <img id="qrcode" alt="qrcode" hidden>

				<form id="second-factor" hidden>
					<label for="token">authenticator code</label>
					<input type="number" name="token">
					<input type="hidden" name="secret">
					<input type="submit" value="submit">
				</form>

				<div id="status"></div> -->
			</div>

			<div class="content">
				<span class="content__col">
					<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolorum ducimus accusantium magnam sit? Architecto quod nemo molestiae ex, sapiente quasi adipisci eligendi non. Odio porro eum, voluptates illum debitis eius.</p>
				</span>
				<span class="content__col">
					<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolorum ducimus accusantium magnam sit? Architecto quod nemo molestiae ex, sapiente quasi adipisci eligendi non. Odio porro eum, voluptates illum debitis eius.</p>
				</span>
				<span class="content__col">
					<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolorum ducimus accusantium magnam sit? Architecto quod nemo molestiae ex, sapiente quasi adipisci eligendi non. Odio porro eum, voluptates illum debitis eius.</p>
				</span>
			</div>
		</div>

		<script src="otplib-preset-browser@^12.0.0-buffer.js"></script>
		<script src="otplib-preset-browser@^12.0.0-index.js"></script>
		<script type="text/javascript">
			const root = document.querySelector('#root');
			root.querySelector('#first-factor').onsubmit = submitFirstFactor;
			root.querySelector('#second-factor').onsubmit = submitSecondFactor;
			const status = root.querySelector('#status');

			function submitFirstFactor(event) {
				event.preventDefault();
				const username = event.target.elements.username.value;
				const password = event.target.elements.password.value;
				const options = {
					method: 'post',
					headers: {
						'Content-Type': 'application/json',
			    },
					body: JSON.stringify({username, password}),
				};
				fetch('/api/auth/1fa', options)
				.then(res => res.json())
				.then(json => handleJsonError(json))
				.then(json => {
					showQRCode(json.imageUrl);
					show2FAForm(json.secret);
				})
				.catch(err => console.error(err));
			}

			function submitSecondFactor(event) {
				event.preventDefault();
				updateStatus('loading...', 'info');
				const token = event.target.elements.token.value;
				const secret = event.target.elements.secret.value;
				if (!validateToken(token, secret)) return updateStatus('invalid token', 'error');
				const options = {
					method: 'post',
					headers: {
						'Content-Type': 'application/json',
			    },
					body: JSON.stringify({token, secret}),
				};
				fetch('/api/auth/2fa', options)
				.then(res => res.json())
				.then(json => handleJsonError(json))
				.then(json => updateStatus(json.htmlText, 'success'))
				.catch(err => updateStatus(err, 'error'));
			}

			function updateStatus(text, styleClass) {
				if (styleClass === 'error') {
					status.style.color = 'orangered';
				} else if (styleClass === 'success') {
					status.style.color = 'darkseagreen';
				} else if (styleClass == 'info') {
					status.style.color = 'dodgerblue';
				}
				status.innerText = text;
			}

			function validateToken(token, secret) {
				return otplib.authenticator.check(token, secret);
			}

			function showQRCode(imageUrl) {
				const qrcode = document.querySelector('#qrcode');
				qrcode.src = imageUrl;
				qrcode.removeAttribute('hidden');
			}

			function show2FAForm(secret) {
				const form = document.querySelector('#second-factor');
				form.elements.secret.value = secret;
				form.removeAttribute('hidden');
			}

			function handleJsonError(json) {
				if (!json.err) {
					return json;
				}
				throw new Error(json.err);
			}
		</script>
	</body>
</html>